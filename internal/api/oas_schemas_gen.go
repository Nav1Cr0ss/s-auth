// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/Login
type Login struct {
	Login    string `json:"login"`
	Password string `json:"password"`
}

// GetLogin returns the value of Login.
func (s *Login) GetLogin() string {
	return s.Login
}

// GetPassword returns the value of Password.
func (s *Login) GetPassword() string {
	return s.Password
}

// SetLogin sets the value of Login.
func (s *Login) SetLogin(val string) {
	s.Login = val
}

// SetPassword sets the value of Password.
func (s *Login) SetPassword(val string) {
	s.Password = val
}

// NewOptLogin returns new OptLogin with value set to v.
func NewOptLogin(v Login) OptLogin {
	return OptLogin{
		Value: v,
		Set:   true,
	}
}

// OptLogin is optional Login.
type OptLogin struct {
	Value Login
	Set   bool
}

// IsSet returns true if OptLogin was set.
func (o OptLogin) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLogin) Reset() {
	var v Login
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLogin) SetTo(v Login) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLogin) Get() (v Login, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLogin) Or(d Login) Login {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Token
type Token struct {
	AccessToken          string    `json:"access_token"`
	AccessTokenExpiresAt time.Time `json:"access_token_expires_at"`
	RefreshToken         string    `json:"refresh_token"`
}

// GetAccessToken returns the value of AccessToken.
func (s *Token) GetAccessToken() string {
	return s.AccessToken
}

// GetAccessTokenExpiresAt returns the value of AccessTokenExpiresAt.
func (s *Token) GetAccessTokenExpiresAt() time.Time {
	return s.AccessTokenExpiresAt
}

// GetRefreshToken returns the value of RefreshToken.
func (s *Token) GetRefreshToken() string {
	return s.RefreshToken
}

// SetAccessToken sets the value of AccessToken.
func (s *Token) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetAccessTokenExpiresAt sets the value of AccessTokenExpiresAt.
func (s *Token) SetAccessTokenExpiresAt(val time.Time) {
	s.AccessTokenExpiresAt = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *Token) SetRefreshToken(val string) {
	s.RefreshToken = val
}
